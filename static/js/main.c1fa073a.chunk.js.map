{"version":3,"sources":["logo.svg","component/MoviesPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MoviesPage","state","movies","currSearchText","limit","genres","id","name","currentPage","cGenres","deleteEntry","filterMovies","filter","movieobj","_id","setState","setCurrentText","e","task","target","value","sortByRating","sortedMovies","className","sort","movieobjA","movieobjB","dailyRentalRate","sortByStock","trim","numberInStock","changelimit","currLimit","changeCurrentPage","pageNumber","groupByGenres","a","fetch","response","json","jsonMovies","this","jsonGenres","filteredArr","genre","title","toLowerCase","includes","numberofPage","Math","ceil","length","pageNumberArr","i","push","si","eidx","slice","class","map","cgObj","onClick","type","onChange","placeholder","scope","aria-label","additional","aria-current","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1fa073a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport { getMovies } from './temp/MoviesService'\r\nexport default class MoviesPage extends Component {\r\n    state = {\r\n      \r\n       // movies : getMovies() ,\r\n        movies : [] ,\r\n        currSearchText : \"\" ,\r\n        limit : 4,\r\n        genres : [{id : 1 , name : \"All Genres\"}],\r\n        currentPage : 1 , \r\n        cGenres : \"All Genres\"        \r\n    }\r\n    deleteEntry = (id) => {\r\n        let filterMovies = this.state.movies.filter((movieobj) =>{\r\n            return movieobj._id != id;\r\n        })\r\n        this.setState({\r\n            movies : filterMovies\r\n        })\r\n    }\r\n    setCurrentText = (e) => {\r\n        let task = e.target.value;\r\n        // filter\r\n        this.setState({\r\n            currSearchText : task,\r\n            \r\n        })\r\n    }\r\n    sortByRating = (e) =>{\r\n        let className = e.target.className;\r\n        let sortedMovies;\r\n        let{movies} = this.state;\r\n        if(className == \"fas fa-sort-up\"){\r\n            sortedMovies = movies.sort((movieobjA , movieobjB) => {\r\n                return movieobjA.dailyRentalRate - movieobjB.dailyRentalRate;\r\n            });\r\n        }else{\r\n            sortedMovies = movies.sort((movieobjA , movieobjB) =>{\r\n                return movieobjB.dailyRentalRate - movieobjA.dailyRentalRate;\r\n            } );\r\n        }\r\n        this.setState({\r\n            movies : sortedMovies\r\n        })\r\n    }\r\n    sortByStock = (e) => {\r\n        let className = e.target.className.trim();\r\n        let sortedMovies;\r\n        let{movies} = this.state;\r\n        if(className == \"fas fa-sort-up\"){\r\n            sortedMovies = movies.sort((movieobjA , movieobjB) => {\r\n                return movieobjA.numberInStock - movieobjB.numberInStock;\r\n\r\n            })\r\n        }else{\r\n            sortedMovies = movies.sort((movieobjA , movieobjB) => {\r\n                return movieobjB.numberInStock - movieobjA.numberInStock;\r\n            });\r\n        }\r\n        this.setState({\r\n            movies : sortedMovies\r\n        })\r\n    }\r\n    changelimit = (e) => {\r\n        let currLimit = e.target.value;\r\n        if(currLimit < 1)\r\n            return;\r\n        this.setState({\r\n            limit : currLimit\r\n        })\r\n\r\n    }\r\n    changeCurrentPage = (pageNumber) => {\r\n        this.setState({\r\n            currentPage : pageNumber\r\n        })\r\n    }\r\n    groupByGenres = (name) => {\r\n        this.setState({\r\n            cGenres : name,\r\n            currSearchText : \"\"\r\n\r\n        })\r\n    }\r\n    async componentDidMount(){\r\n        let response = await fetch(\"https://react-backend101.herokuapp.com/movies\");\r\n        let jsonMovies = await response.json()\r\n        this.setState({\r\n            movies : jsonMovies.movies\r\n        })\r\n        response = await fetch(\"https://react-backend101.herokuapp.com/genres\");\r\n        let jsonGenres = await response.json()\r\n        this.setState({\r\n            genres : [...this.state.genres , ...jsonGenres.genres]   // split \r\n        });\r\n\r\n    }\r\n    render() {\r\n        let { movies , currSearchText , limit , currentPage , genres , cGenres} = this.state;\r\n        // Filter On the based of Genres \r\n        let filteredArr = movies;\r\n        if(cGenres != \"All Genres\"){\r\n            filteredArr = filteredArr.filter((movieobj) => {\r\n                return movieobj.genre.name == cGenres;\r\n            })\r\n        }\r\n        //  Filter On the base of Search Term\r\n        if(currSearchText != \"\"){\r\n            filteredArr = filteredArr.filter((movieobj) => {\r\n                let title = movieobj.title.trim().toLowerCase();\r\n                return title.includes(currSearchText.toLowerCase());\r\n           \r\n\r\n            })\r\n        }\r\n        // paginate\r\n        // no of pages\r\n        let numberofPage = Math.ceil(filteredArr.length / limit);\r\n        let pageNumberArr = []\r\n        for (let i = 0; i < numberofPage; i++) {\r\n            pageNumberArr.push(i + 1);\r\n        }\r\n        // impliment\r\n        // si >- sartingindx>- (pagenumber - 1) * limit\r\n        // eidx >- endingindx >- si + limit\r\n        \r\n        let si = (currentPage -1 )*limit;\r\n        let eidx = si + limit;\r\n        filteredArr = filteredArr.slice(si , eidx);\r\n        return (\r\n        \r\n            <div className = \"row\" >     {/* page devided into 12 vertical row \r\n                {/* col-3 means 12 out of 3 part and col-9 means 9 out of 12 part */}\r\n                 <div className=\"col-3\">\r\n                 <ul class=\"list-group\">\r\n                     {\r\n                        this.state.genres.map((cgObj) => (\r\n                             <li class=\"list-group-item\" key = {cgObj.id} \r\n                             onClick = {() => {this.groupByGenres(cgObj.name)}}>\r\n                                 {cgObj.name}</li>\r\n\r\n                        )) \r\n                     }\r\n                \r\n                 </ul>\r\n                 </div>\r\n                 <div className=\"col-9\">\r\n                      {/* In bootstrap , seach the table >- and copy the code of table class */}\r\n            \r\n            <input type = \"search\" value = {currSearchText} onChange = {this.setCurrentText}></input>\r\n            <input type = \"number\" className = \"col-1\"\r\n            placeholder = \"no of elements/page\"\r\n            value = {limit}\r\n            onChange = {this.changelimit}>\r\n                \r\n            </input>\r\n                <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Title</th>\r\n                  <th scope=\"col\">Genre</th>\r\n                  <th scope=\"col\">Stock\r\n                  <i className = \"fas fa-sort-up\" onClick = {this.sortByStock}></i>\r\n                  <i className = \"fas fa-sort-down\" onClick = {this.sortByStock}></i>\r\n                      </th>\r\n                  <th scope = \"col\">Rating\r\n                  <i className = \"fas fa-sort-up\" onClick = {this.sortByRating}></i>\r\n                  <i className = \"fas fa-sort-down\" onClick = {this.sortByRating}></i>\r\n                    </th>\r\n                </tr>\r\n              </thead>\r\n\r\n                <tbody>\r\n                {filteredArr.map((movieobj) =>{\r\n                    return(<tr scope= \"row\" key = {movieobj._id}>\r\n                        <td>{movieobj.title}</td> \r\n                        <td>{movieobj.genre.name}</td> \r\n                        <td>{movieobj.numberInStock}</td>\r\n                        <td>{movieobj.dailyRentalRate}</td>\r\n                        <td>\r\n                        <button className = \"btn btn-danger text-white\" onClick = {() => {\r\n                            this.deleteEntry(movieobj._id);\r\n                        }}>Delete</button>\r\n                        </td>\r\n                        \r\n                    </tr>)\r\n                    \r\n                })}\r\n              </tbody>\r\n\r\n                </table>\r\n                <nav aria-label=\"...\" className=\"col-2\" >\r\n                        <ul className=\"pagination \">\r\n                            {\r\n                                pageNumberArr.map((pageNumber) => {\r\n                                    let additional = pageNumber == currentPage ? \"page-item active\" : \"page-item\";\r\n                                    return (\r\n                                        <li className=\"page-item\" aria-current=\"page\">\r\n                                        <li className={additional}\r\n                                            aria-current=\"page\" onClick={() => { this.changeCurrentPage(pageNumber) }}>\r\n                                            <span className=\"page-link\">{pageNumber}</span>\r\n                                        </li>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n                 </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    }","import logo from './logo.svg';\nimport './App.css';\nimport MoviesPage from './component/MoviesPage';\n\nfunction App() {\n  return (\n\n<MoviesPage></MoviesPage>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}